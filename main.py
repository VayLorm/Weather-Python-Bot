import telebot
import requests
from datetime import datetime
import pytz
import time

bot = telebot.TeleBot('token here')
dnt1 = 'ùîûùî§ùî§ùîØùî¢ùî∞ùî∞ùî¶ùî≥ùî¢ùî´ùî¢ùî∞ùî∞ [‚Ñùùïã]'
dnt2 = '–ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç—É'
dnt3 = '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–¥–µ—Å—å'
dnt4 = '–û–∫–∞–∑–∞—Ç—å—Å—è'
dnt5 = '–ó–∞–¥–æ–Ω–∞—Ç—å'

updates = '–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /stop, –î–æ–±–∞–≤–ª–µ–Ω—ã –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏, –æ–±–Ω–æ–≤–ª–µ–Ω –∫–æ–¥ –Ω–∞ GitHub'

#–ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start(message, res=False):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand start started\n')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç. –ù–∞–ø–∏—à–∏ /info')

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã /time. –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏—Ç –≤ –ª–æ–≥–∏ –∫–æ–≥–¥–∞ –∑–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç –ø–æ –ú–°–ö.
tz_NY = pytz.timezone('Europe/Moscow')
datetime_NY = datetime.now(tz_NY)
print("Moscow time:", datetime_NY.strftime("%H:%M:%S"))
print("Checking of Time is Success!")

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫ –∫–æ–º–∞–Ω–¥–µ /weather
temp = ""
temp_min = ""
temp_max = ""
s_city = "Naro-Fominsk,RU"
city_id = 0
appid = "deeedf2ac93b814785e5c147aa7f6b57"
print("Started!")
print("Logs:\n")

#–ö–æ–º–∞–Ω–¥–∞ /weather. –°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏ –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —Å–ª–æ–∂–Ω—ã—Ö –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ.
@bot.message_handler(commands=["pogoda", "weather", "pagoda"])
def pogoda(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand pogoda started')
    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/find",
                           params={'q': s_city, 'type': 'like', 'units': 'metric', 'APPID': appid})
        data = res.json()
        cities = ["{} ({})".format(d['name'], d['sys']['country'])
                  for d in data['list']]
        print("city:", cities)
        city_id = data['list'][0]['id']
        print('city_id=', city_id)
    except Exception as e:
        print("Exception (find):", e)
        pass
    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/weather",
                           params={'id': city_id, 'units': 'metric', 'lang': 'ru', 'APPID': appid})
        data = res.json()
        print("conditions:", data['weather'][0]['description'])
        print("temp:", data['main']['temp'])
        print("temp_min:", data['main']['temp_min'])
        print("temp_max:", data['main']['temp_max'])
    except Exception as e:
        print("Exception (weather):", e)
        pass
    temp = data['main']['temp']
    temp_min = data['main']['temp_min']
    temp_max = data['main']['temp_max']
    conditions = data['weather'][0]['description']
    bot.send_message(message.chat.id, '–í –ù–∞—Ä–æ-–§–æ–º–∏–Ω—Å–∫–µ: '
                     + '\n' + '–°–µ–π—á–∞—Å: ' + str(conditions)
                     + '\n' + '–°—Ä–µ–¥–Ω—è—è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(temp)
                     + '\n' + '–ù–∞–∏–º–µ–Ω—å—à–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(temp_min)
                     + '\n' + '–ù–∞–∏–±–æ–ª—å—à–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(temp_max)
                     )

#–ö–æ–º–∞–Ω–¥–∞ /code
@bot.message_handler(commands=["mycode", "code", "github", "source_code"])
def my_code(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand my_code started\n')
    bot.send_message(message.chat.id, '–ú–æ–π –∫–æ–¥:' + '\n' + 'https://github.com/VayLorm/Weather-Python-Bot.git')

#–ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=["help", "info"])
def help(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand help started\n')
    bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—ã:'
                     + '\n' + '/help , /info - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω–æ–µ –º–µ–Ω—é'
                     + '\n' + '/pogoda, /weather, /pagoda - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –ù–∞—Ä–æ-–§–æ–º–∏–Ω—Å–∫–µ –Ω–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è'
                     + '\n' + '/mycode , /code , /github , /source_code - –ú–æ–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)'
                     + '\n' + '/donate , /donationalerts - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ—Ä–∞ –Ω–∞ DonationAlerts!'
                     + '\n' + '/topdonate , /topdonater - –¢–æ–ø –ø–æ–¥–¥–µ—Ä–∂–∞–≤—à–∏—Ö –Ω–∞ DonationAlerts.'
                     + '\n' + '/credits , /author - –í–µ—Ä—Å–∏—è –∏ –ê–≤—Ç–æ—Ä'
                     + '\n' + '/time , /msktime - –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è'
                     )

#–ö–æ–º–∞–Ω–¥–∞ /donate
@bot.message_handler(commands=["donate", "subscribe", "donationalerts"])
def donate(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand donateurl started\n')
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ —Ç–æ –≤–æ—Ç DonationAlerts:" + "\n" + "https://www.donationalerts.com/r/vaylorm")

#–ö–æ–º–∞–Ω–¥–∞ /credits
@bot.message_handler(commands=["author", "credits"])
def credits(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand credits started\n')
    bot.send_message(message.chat.id, "–í–µ—Ä—Å–∏—è 0.8 (–±–µ—Ç–∞)" + "\n" + "–ê–≤—Ç–æ—Ä - @VayLorm" + "\n" + "–î–ª—è –ø–æ–º–æ—â–∏ - /help –∏–ª–∏ /info")

#–ö–æ–º–∞–Ω–¥–∞ /time
@bot.message_handler(commands=["msktime", "time"])
def msktime(message):
    user_id = message.from_user.id
    print('user_id: ' + str(user_id) + '\ncommand msktime started')
    Moscow = pytz.timezone('Europe/Moscow')
    datetime_Moscow = datetime.now(Moscow)
    print(datetime_Moscow.strftime("%H:%M:%S"), '\n')
    bot.send_message(message.chat.id, "–í—Ä–µ–º—è —Å–µ–π—á–∞—Å: " + datetime_Moscow.strftime("%H:%M:%S"))

#–ö–æ–º–∞–Ω–¥–∞ /timer
@bot.message_handler(commands=["timer"])
def timer1(message):
    print('timer command started')
    msgv = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í—Ä–µ–º—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö):')
    bot.register_next_step_handler(msgv, timer2)

#–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /timer
def timer2(message):
    print('timer2 started')
    try:
        sec = message.text
        sec = int(sec)
        cid = message.chat.id
        msg = bot.send_message(chat_id=cid, text='–û—Å—Ç–∞–ª–æ—Å—å:')
        print('user_id: ', cid)
        print('time(sec): ', sec, '\n')
        while True:
            if sec > 0:
                minutes = sec // 60
                if minutes >= 60:
                    cid = message.chat.id
                    h = minutes // 60
                    min1 = minutes - h * 60
                    sec1 = sec - minutes * 60
                    msg_to_send = f'–û—Å—Ç–∞–ª–æ—Å—å: {h} —á–∞—Å–æ–≤ : {min1} –º–∏–Ω—É—Ç : {sec1} —Å–µ–∫—É–Ω–¥'
                    bot.edit_message_text(chat_id=cid, message_id=msg.message_id, text=msg_to_send)
                    time.sleep(2)
                    sec = sec - 2
                else:
                    cid = message.chat.id
                    sec1 = sec - minutes * 60
                    msg_to_send2 = f'–û—Å—Ç–∞–ª–æ—Å—å: {minutes} –º–∏–Ω—É—Ç : {sec1} —Å–µ–∫—É–Ω–¥'
                    bot.edit_message_text(chat_id=cid, message_id=msg.message_id, text=msg_to_send2)
                    time.sleep(2)
                    sec = sec - 2
            else:
                bot.edit_message_text(chat_id=cid, message_id=msg.message_id, text="–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∏–ª–æ—Å—å!")
                print('time expired')
                break
    except Exception as e:
        msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞: ' + str(e) +
                               '\n' + '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, —ç—Ç–æ —Ç–∞–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.'
                                      '\n' + '\n' '–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏ —è –≤–∫–ª—é—á—É —Ç–∞–π–º–µ—Ä –∏ —Å–∞–º –ø–µ—Ä–µ–≤–µ–¥—É —Å–µ–∫—É–Ω–¥—ã –≤ '
                                             '–º–∏–Ω—É—Ç—ã –∏ '
                                             '–º–∏–Ω—É—Ç—ã –≤ —á–∞—Å—ã –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è')
        bot.register_next_step_handler(msg, timer1)

'''
–í—Ä–µ–º–µ–Ω–Ω—ã–π –∫—É—Å–æ–∫ –∫–æ–¥–∞. –ü–æ–∫–∞ –¥—É–º–∞—é –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å
–ù–∞–ø–æ–º–∏–Ω–∞—é - —ç—Ç–æ –ë–ï–¢–ê –≤–µ—Ä—Å–∏—è
GROUP_ID = -723366333
AUTHOR_ID = 1408266288
@bot.message_handler(func=lambda message: message.chat.id == AUTHOR_ID)
def tell(message):
    bot.send_message(GROUP_ID, message.text)
'''

#–ö–æ–º–∞–Ω–¥–∞ /updates
#–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ —Å –≤–∞—à–∏–º id
#–ü–æ–º–µ–Ω—è–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é author_id –Ω–∞ —Å–≤–æ–π id
@bot.message_handler(commands=["updates"])
def update(message):
    user_id = message.from_user.id
    author_id = 1408266288
    print(message.chat.id, user_id, '\n')
    if user_id == author_id:
        bot.send_message(message.chat.id, '–¢–µ–∫—É—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:\n' + updates)
    else:
        bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ @VayLorm –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!")

#–ö–æ–º–∞–Ω–¥–∞ /topdonate
@bot.message_handler(commands=["topdonate" , "topdonater"])
def topdonater(message):
    bot.send_message(message.chat.id, "–¢–æ–ø –¥–æ–Ω–∞—Ç–µ—Ä–æ–≤: "
                     + '\n' + '1: ' + dnt1
                     + '\n' + '2: ' + dnt2
                     + '\n' + '3: ' + dnt3
                     + '\n' + '4: ' + dnt4
                     + '\n' + '5: ' + dnt5
                     )

#–ö–æ–º–∞–Ω–¥–∞ /stop
@bot.message_handler(commands=["stop" , "kill"])
def stop(message):
    user_id = message.from_user.id
    author_id = 1408266288
    print(message.chat.id, user_id, '\n')
    print('stop command started')
    if user_id == author_id:
        bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–µ–Ω–∏–µ...')
        bot.stop_bot()
    else:
        bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ @VayLorm –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!")


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
